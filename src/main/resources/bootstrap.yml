spring:
  application:
    name: movements-service
  cloud:
    config:
      discovery:
        enabled: false
        service-id: openwms-config
      enabled: false
      fail-fast: false # true means retry
      retry:
        max-attempts: 120
    discovery:
      enabled: false
  config:
    location: classpath:application.yml
  security:
    user:
      name: user
      password: sa
  jpa:
    mapping-resources:
      - META-INF/movements-orm.xml
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
    show-sql: false
  jackson:
    date-format: "yyyy-MM-dd'T'HH:mm:ssXXX" # Only matches Dates no Instants!
  main:
    allow-bean-definition-overriding: true
  zipkin:
    sender:
      type: web
  mvc:
    format:
      date-time: "yyyy-MM-dd'T'HH:mm:ssXXX" # Must match the pattern how of @JsonFormat field annotation patterns
      date: yyyy-MM-dd
      time: HH:mm:ss

feign:
  httpclient:
    connection-timeout: 30000
    connection-timer-repeat: 30000
ribbon:
  connectTimeout: 30000
  ReadTimeout: 30000

owms:
  eureka:
    url: http://user:sa@localhost:8761
    zone: ${owms.eureka.url}/eureka/
  srv:
    protocol: http
    hostname: localhost

server:
  port: ${PORT:8134}

eureka:
  client:
    instance-info-replication-interval-seconds: 10 # default is 30
    service-url:
      defaultZone: ${owms.eureka.zone} # Must be camelCase
  instance:
    hostname: ${owms.srv.hostname}
    secure-port-enabled: false
    non-secure-port-enabled: true
    metadata-map:
      username: ${spring.security.user.name}
      password: ${spring.security.user.password}
      protocol: ${owms.srv.protocol}
      zone: ${owms.eureka.zone}
      config-protocol: http # The protocol used to access the config server
    prefer-ip-address: true

info:
  scm-url: "@scm.url@"
  build-url: "@ciManagement.url@"

logging:
  file:
    name: BOOT-WMS-Movements.log
    path: "/tmp/owms"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    rabbit:
      enabled: false
  metrics:
    web:
      server:
        request:
          autotime:
            enabled: true
    export:
      prometheus:
        enabled: true

---
spring:
  profiles: ASYNCHRONOUS
  rabbitmq:
    listener:
      simple:
        retry:
          max-attempts: 3
          enabled: true
          initial-interval: 1s
          max-interval: 1s

owms:
  commands:
    common:
      tu:
        exchange-name: common.tu.commands
    movements:
      exchange-name: movements.commands
      movement:
        queue-name: movements-command-queue
        routing-key: movement.command.create
  dead-letter:
    exchange-name: dle.inventory
    queue-name: inventory-dl-queue
  events:
    shipping:
      exchange-name: shipping
      split:
        queue-name: movements-split-queue
        routing-key: split.event.created
  movements:
    exchange-name: movements
    serialization: json

management:
  health:
    rabbit:
      enabled: true

---
spring:
  profiles: DISTRIBUTED
  cloud:
    config:
      discovery:
        enabled: true
      enabled: true
      fail-fast: true # true means retry
    discovery:
      enabled: true
  zipkin:
    locator:
      discovery:
        enabled: true

---
spring:
  profiles: HEROKU
  main:
    banner-mode: "OFF"
  cloud:
    config:
      discovery:
        enabled: true
      enabled: true

owms:
  srv:
    protocol: https
    hostname: openwms-tms-movements.herokuapp.com

eureka:
  instance:
    secure-port-enabled: true
    non-secure-port-enabled: false
    statusPageUrl: ${owms.srv.protocol}://${owms.srv.hostname}:${server.port}/actuator/info
    healthCheckUrl: ${owms.srv.protocol}://${owms.srv.hostname}:${server.port}/actuator/health
    homePageUrl: ${owms.srv.protocol}://${owms.srv.hostname}:${server.port}/actuator/

---
spring:
  profiles: K8S
  rabbitmq:
    host: owms-broker
owms:
  eureka:
    url: http://user:sa@owms-services:8761
  srv:
    hostname: owms-movements

---
spring:
  profiles: TEST
  cloud:
    config:
      fail-fast: false
  jpa:
    properties:
      hibernate:
        hbm2ddl:
          import_files: import-TEST.sql
  main:
    banner-mode: "off"

owms:
  movement:
    targets:
      - name: ERR_/0001/0000/0000/0000
        search-location-group-names: CLEARING
        type: INBOUND

---
spring:
  profiles: TESTPG
  jpa:
    database: postgresql
    generate-ddl: true
    properties:
      hibernate:
        hbm2ddl:
          auto: create
          import_files: import-TEST.sql
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
        temp:
          use_jdbc_metadata_defaults: false
        default_schema: public
    hibernate:
      ddl-auto: create
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql:testdb
    username: KARL
    password: KARL
